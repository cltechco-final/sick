이름,설명,예시 코드,조치 코드
입력값 검증 및 표현 오류,"사용자의 입력값을 제대로 검증하지 않아 XSS, SQL Injection 등 공격에 노출됨.","// 취약한 코드
String name = request.getParameter(""name"");
out.println(""<p>"" + name + ""</p>"");","// 안전한 코드
String name = request.getParameter(""name"");
name = ESAPI.encoder().encodeForHTML(name);  // OWASP ESAPI 사용
out.println(""<p>"" + name + ""</p>"");"
보안 기능 오류,"인증, 인가 등의 보안 기능이 누락되거나 잘못 적용된 경우.","// 취약한 코드
if (userRole.equals(""admin"")) {
    showAdminPage();  // 인증 없이 역할만 체크
}","// 안전한 코드
if (session.isValid() && userRole.equals(""admin"")) {
    showAdminPage();  // 인증 + 인가 확인
}"
세션 통제 미흡,"세션 종료 처리 미흡, 타임아웃 미설정 등으로 인한 세션 탈취 위험.","// 취약한 코드
session.invalidate();  // 세션 무효화 없음","// 안전한 코드
session.invalidate();  // 로그아웃 시 세션 삭제
response.setHeader(""Set-Cookie"", ""JSESSIONID=; HttpOnly; Secure; Max-Age=0"");"
크로스사이트 스크립팅(XSS),입력값을 HTML에 직접 출력함으로써 악성 스크립트가 실행됨.,"// 취약한 코드
out.println(""<div>"" + request.getParameter(""msg"") + ""</div>"");","// 안전한 코드
String safeMsg = ESAPI.encoder().encodeForHTML(request.getParameter(""msg""));
out.println(""<div>"" + safeMsg + ""</div>"");"
SQL 삽입,사용자 입력값이 SQL 쿼리에 삽입되어 DB가 조작될 수 있음.,"// 취약한 코드
String query = ""SELECT * FROM users WHERE id='"" + userId + ""'"";
Statement stmt = conn.createStatement();
ResultSet rs = stmt.executeQuery(query);","// 안전한 코드
String query = ""SELECT * FROM users WHERE id = ?"";
PreparedStatement pstmt = conn.prepareStatement(query);
pstmt.setString(1, userId);
ResultSet rs = pstmt.executeQuery();"
운영환경 오류,"디버깅 정보 노출, 기본 비밀번호 유지 등 운영환경 설정 부주의.","// 취약한 코드
e.printStackTrace();  // 예외 상세 노출","// 안전한 코드
logger.error(""에러 발생: {}"", e.getMessage());  // 사용자에겐 에러 메시지 숨김"
파일 및 디렉터리 접근제어 오류,경로 조작을 통해 민감한 파일에 접근 가능.,"// 취약한 코드
String file = request.getParameter(""file"");
File f = new File(""/user/data/"" + file);","// 안전한 코드
String file = request.getParameter(""file"");
if (!file.matches(""[a-zA-Z0-9_\.]+"")) {
    throw new SecurityException(""허용되지 않은 파일명입니다."");
}
File f = new File(""/user/data/"" + file);"
시스템 자원 관리 오류,자원 해제를 하지 않아 리소스 고갈 초래.,"// 취약한 코드
FileInputStream fis = new FileInputStream(""data.txt"");
// 사용 후 close 안함","// 안전한 코드
try (FileInputStream fis = new FileInputStream(""data.txt"")) {
    // 처리
}"
암호화 오류,자체 구현한 암호화나 취약한 알고리즘 사용.,"// 취약한 코드
String encrypted = Base64.getEncoder().encodeToString(password.getBytes());","// 안전한 코드
Cipher cipher = Cipher.getInstance(""AES/CBC/PKCS5Padding"");
// 키 관리와 초기화 벡터 설정 필요"
입출력 포맷 오류,입력 데이터 형식 및 길이에 대한 검증 미흡.,"// 취약한 코드
int age = Integer.parseInt(request.getParameter(""age""));","// 안전한 코드
try {
    int age = Integer.parseInt(request.getParameter(""age""));
    if (age < 0 || age > 120) throw new IllegalArgumentException();
} catch (NumberFormatException e) {
    // 예외 처리
}"
